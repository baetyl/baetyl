#!/usr/bin/env python
#
import sys
import struct
import json


class Context(object):
    def __init__(self, name):
        self.function_name = name


def main():
    sys.path.append("code")
    name = sys.argv[1]
    (mod, handler) = sys.argv[2].rsplit('.', 1)
    mod = __import__(mod)
    handler = getattr(mod, handler)
    ctx = Context(name)
    while True:
        try:
            talk(handler, ctx)
        except KeyboardInterrupt:
            break
        except Exception as ex:
            with open('var/log/openedge/service.log', 'a') as log:
                print >> log, 'function handler fail: %s' % ex
            raise ex


def talk(handler, ctx):
    (topic_len,) = struct.unpack('!H', sys.stdin.read(2))
    topic = sys.stdin.read(topic_len)
    (qos,) = struct.unpack('c', sys.stdin.read(1))
    (payload_len,) = struct.unpack('!L', sys.stdin.read(4))
    payload = sys.stdin.read(payload_len)
    reply = handler(json.loads(payload), ctx)
    reply = json.dumps(reply)
    sys.stdout.write(struct.pack('!L', len(reply)))
    sys.stdout.flush()
    sys.stdout.write(reply)
    sys.stdout.flush()


if __name__ == '__main__':
    main()
