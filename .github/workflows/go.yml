name: Go
on: [push]
jobs:

  amd64_:
    runs-on: ubuntu-18.04
    name: Build on amd64 
    steps:
      - uses: actions/checkout@v1.0.0
      - uses: chensheng0/run-on-arch-action@master
        id: runcmd
        with:
          architecture: amd64
          distribution: ubuntu18.04
          run: |
            uname -a >test.txt
            ls
            go version
            go build -ldflags '-linkmode external -w -extldflags "-static"' -o testx .
            echo ::set-output name=uname::$(uname -a)
            echo ::set-output name=goversion::$(go version)
      - name: Get the output
        run: |
            echo "The uname output was ${{ steps.runcmd.outputs.uname }}"
            echo "The goversion output was ${{ steps.runcmd.outputs.goversion }}"
      - name: Get the output
        run: |
            pwd
            ls
            cat test.txt
  i386:
      runs-on: ubuntu-18.04
      name: Build on i386 
      steps:
        - uses: actions/checkout@v1.0.0
        - uses: chensheng0/run-on-arch-action@master
          id: runcmd
          with:
            architecture: i386
            distribution: ubuntu18.04
            run: |
              uname -a >test.txt
              ls
              go version
              go build -ldflags '-linkmode external -w -extldflags "-static"' -o testx .
              echo ::set-output name=uname::$(uname -a)
              echo ::set-output name=goversion::$(go version)
        - name: Get the output
          run: |
              echo "The uname output was ${{ steps.runcmd.outputs.uname }}"
              echo "The goversion output was ${{ steps.runcmd.outputs.goversion }}"
        - name: Get the output
          run: |
              pwd
              ls
              cat test.txt
  aarch64:
      runs-on: ubuntu-18.04
      name: Build on aarch64 
      steps:
        - uses: actions/checkout@v1.0.0
        - uses: chensheng0/run-on-arch-action@master
          id: runcmd
          with:
            architecture: aarch64
            distribution: ubuntu18.04
            run: |
              uname -a >test.txt
              ls
              go version
              go build -ldflags '-linkmode external -w -extldflags "-static"' -o testx .
              echo ::set-output name=uname::$(uname -a)
              echo ::set-output name=goversion::$(go version)
        - name: Get the output
          run: |
              echo "The uname output was ${{ steps.runcmd.outputs.uname }}"
              echo "The goversion output was ${{ steps.runcmd.outputs.goversion }}"
        - name: Get the output
          run: |
              pwd
              ls
              cat test.txt
  armv7:
      runs-on: ubuntu-18.04
      name: Build on armv7 
      steps:
        - uses: actions/checkout@v1.0.0
        - uses: chensheng0/run-on-arch-action@master
          id: runcmd
          with:
            architecture: armv7
            distribution: ubuntu18.04
            run: |
              uname -a >test.txt
              ls
              go version
              go build -ldflags '-linkmode external -w -extldflags "-static"' -o testx .
              echo ::set-output name=uname::$(uname -a)
              echo ::set-output name=goversion::$(go version)
        - name: Get the output
          run: |
              echo "The uname output was ${{ steps.runcmd.outputs.uname }}"
              echo "The goversion output was ${{ steps.runcmd.outputs.goversion }}"
        - name: Get the output
          run: |
              pwd
              ls
              cat test.txt
