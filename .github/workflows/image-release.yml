name: image-release
on:
  push:
    tags:
      - 'v*'

jobs:
  core-image:
    name: docker build core image
    runs-on: ubuntu-latest
    steps:
      - name: Install deps
        run: sudo apt update -y && sudo apt install -y qemu qemu-user-static
      - name: Install Docker CE for buildx
        run: |
          sudo apt update
          sudo apt install apt-transport-https ca-certificates curl gnupg-agent software-properties-common
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
          sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
          sudo apt update
          sudo apt install docker-ce
          docker -v
      - name: Checkout code
        uses: actions/checkout@v1
      - id: version
        run: |
          echo ::set-output name=version::$(echo ${GITHUB_REF:10})
      - name: docker login
        run: |
          docker login -u ${{ secrets.DOCKER_REGISTRY_ID }} -p ${{ secrets.DOCKER_REGISTRY_PASS }}
      - name: build and publish baetyl-core image
        run: |
          make image-core PLATFORMS=all XFLAGS='--push --cache-to=type=local,dest=/tmp/core' REGISTRY=baetyltech/ GIT_TAG=${{ steps.version.outputs.version }}
     
  init-image:
    name: docker build init image
    runs-on: ubuntu-latest
    steps:
      - name: Install deps
        run: sudo apt update -y && sudo apt install -y qemu qemu-user-static
      - name: Install Docker CE for buildx
        run: |
          sudo apt update
          sudo apt install apt-transport-https ca-certificates curl gnupg-agent software-properties-common
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
          sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
          sudo apt update
          sudo apt install docker-ce
          docker -v
      - name: docker login
        run: |
          docker login -u ${{ secrets.DOCKER_REGISTRY_ID }} -p ${{ secrets.DOCKER_REGISTRY_PASS }}
      - name: Checkout code
        uses: actions/checkout@v1
      - id: version
        run: |
          echo ::set-output name=version::$(echo ${GITHUB_REF:10})
      - name: build and publish baetyl-init image
        run: |
          make image-init PLATFORMS=all XFLAGS='--push --cache-to=type=local,dest=/tmp/init' REGISTRY=baetyltech/ GIT_TAG=${{ steps.version.outputs.version }}
     
