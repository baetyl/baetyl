// Code generated by MockGen. DO NOT EDIT.
// Source: agent.go

// Package mock is a generated GoMock package.
package mock

import (
	gomock "github.com/golang/mock/gomock"
	routing "github.com/qiangxue/fasthttp-routing"
	reflect "reflect"
)

// MockAgentClient is a mock of AgentClient interface
type MockAgentClient struct {
	ctrl     *gomock.Controller
	recorder *MockAgentClientMockRecorder
}

// MockAgentClientMockRecorder is the mock recorder for MockAgentClient
type MockAgentClientMockRecorder struct {
	mock *MockAgentClient
}

// NewMockAgentClient creates a new mock instance
func NewMockAgentClient(ctrl *gomock.Controller) *MockAgentClient {
	mock := &MockAgentClient{ctrl: ctrl}
	mock.recorder = &MockAgentClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockAgentClient) EXPECT() *MockAgentClientMockRecorder {
	return m.recorder
}

// SendRequest mocks base method
func (m *MockAgentClient) SendRequest(ctx *routing.Context) (interface{}, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SendRequest", ctx)
	ret0, _ := ret[0].(interface{})
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SendRequest indicates an expected call of SendRequest
func (mr *MockAgentClientMockRecorder) SendRequest(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendRequest", reflect.TypeOf((*MockAgentClient)(nil).SendRequest), ctx)
}

// GetOrSetAgentFlag mocks base method
func (m *MockAgentClient) GetOrSetAgentFlag(action string) (bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetOrSetAgentFlag", action)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetOrSetAgentFlag indicates an expected call of GetOrSetAgentFlag
func (mr *MockAgentClientMockRecorder) GetOrSetAgentFlag(action interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetOrSetAgentFlag", reflect.TypeOf((*MockAgentClient)(nil).GetOrSetAgentFlag), action)
}
